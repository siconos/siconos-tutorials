# Templates for ci jobs
include: ci_gitlab/gitlab-ci-tutorials-templates.yml

# ---- Siconos install jobs ----
# Prepare 'Siconos ready' images
# and push them to siconos-tutorials repository.
# 
# A standard install of siconos.
# Based on siconos registry ubuntu18.04.
siconos-install:siconos-ubuntu-18.04:
  variables:
    IMAGE_NAME: siconos-ubuntu-18.04
  extends: .siconos-install

# An install of siconos with mechanisms,
# oce/pythonocc based.
siconos-install:siconos-ubuntu-18.04-with-mechanisms:
  variables:
    IMAGE_NAME: siconos-ubuntu-18.04-with-mechanisms
  extends: .siconos-install


# ---- Examples jobs ----
# Build and tests examples from tutorials
# Pull docker image 'siconos ready'
# then build, run and tests examples.

# examples, on ubuntu-18.04 with standard (default)
# Siconos installation.
examples:ubuntu-18.04:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/siconos-ubuntu-18.04
  extends: .examples-build

# examples, on ubuntu-18.04 with standard (default)
# Siconos installation.
examples:ubuntu-18.04-with-mechanisms:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/siconos-ubuntu-18.04-with-mechanisms
  extends: .examples-build

 
  
# This job clone, build and install on default os (ubuntu)
# siconos software, with the 'standard' config
# (release, all components, without oce)
# Installed path is transfered to next job (examples) using artifacts.
# ubuntu:install_siconos:
#   image: ubuntu:18.04
#   stage: build
#   before_script:
#     - export CTEST_MODEL=$ctest_build_model
#     - apt update -qq > /dev/null
#     - apt install -y -qq cmake git-core wget make
#       libboost-dev libgmp-dev swig gcc gfortran g++ liblapack-dev
#       libatlas-base-dev lp-solve liblpsolve55-dev python3-dev
#       libpython3-dev bash swig doxygen python3-pip htop
#       libcppunit-dev python3-scipy python3-pytest valgrind python3-h5py > /dev/null
#   script:
#     - "sh ci/install_siconos.sh $os" 
#   artifacts:
#     paths:
#       - install-siconos
#   only:
#   - master

# # This job clone, build and install siconos examples 
# # (from siconos-tutorials), using Siconos installed in
# # job 'ubuntu:install_siconos'
# # allow_failure is set to true to authorize next stages jobs to run.
# ubuntu:build_and_run_examples:
#   image: ubuntu:18.04
#   stage: test
#   before_script:
#     - export CTEST_MODEL=$ctest_build_model
#     - apt update -qq > /dev/null
#     - apt install -y -qq cmake git-core wget make
#       libboost-dev libgmp-dev swig gcc gfortran g++ liblapack-dev
#       libatlas-base-dev lp-solve liblpsolve55-dev python3-dev
#       libpython3-dev bash swig doxygen python3-pip htop
#       libcppunit-dev python3-scipy python3-pytest valgrind python3-h5py > /dev/null
#   script:
#     - "sh ci/build_and_run_examples.sh $os"
#   only:
#   - master
#   dependencies:
#    - ubuntu:install_siconos
#   allow_failure: true

# This job clone, build and install siconos software
# on default os (ubuntu), with the 'mechanisms' config
# (release, all components, with oce and pythonocc)
# OCE is installed using ubuntu packages
# pythonocc is cloned from github repo, built and installed.
#
# Installed paths are transfered to next job (examples) using artifacts.
# ubuntu:install_siconos_with_mechanisms:
#   image: ubuntu:18.04
#   stage: build-mechanisms
#   before_script:
#     - export CTEST_MODEL=$ctest_build_model
#     - apt update -qq > /dev/null
#     - apt install -y -qq cmake git-core wget make
#       libboost-dev libgmp-dev swig gcc gfortran g++ liblapack-dev
#       libatlas-base-dev lp-solve liblpsolve55-dev python3-dev
#       libpython3-dev bash swig doxygen python3-pip htop
#       libcppunit-dev python3-scipy python3-pytest valgrind python3-h5py > /dev/null
#     - apt install -y libbullet-dev libbullet-dev libfreetype6-dev freeglut3-dev > /dev/null
#     - apt install -y liboce-foundation-dev liboce-modeling-dev liboce-ocaf-dev liboce-visualization-dev > /dev/null
#   script:
#     - "sh ci/install_oce.sh"
#     - export PYTHONPATH=$CI_PROJECT_DIR/install/site-packages
#     - "sh ci/install_siconos_with_mechanisms.sh $os" 
#   artifacts:
#     paths:
#       - $CI_PROJECT_DIR/install/
#       - install-siconos
#   only:
#   - master
#   allow_failure: true
  
# This job clone, build and install siconos examples 
# (from siconos-tutorials), using Siconos installed in
# job 'ubuntu:install_siconos_with_mechanisms' and thus
# includes all examples based on oce.
# OCE is installed using ubuntu packages
# pythonocc comes from artifacts of job ubuntu:install_siconos_with_mechanisms
# ubuntu:build_and_run_examples_with_mechanisms:
#   stage: test-mechanisms
#   before_script:
#     - export CTEST_MODEL=$ctest_build_model
#     - apt update -qq > /dev/null
#     - apt install -y -qq cmake git-core wget make
#       libboost-dev libgmp-dev swig gcc gfortran g++ liblapack-dev
#       libatlas-base-dev lp-solve liblpsolve55-dev python3-dev
#       libpython3-dev bash swig doxygen python3-pip htop
#       libcppunit-dev python3-scipy python3-pytest valgrind python3-h5py > /dev/null
#     - apt install -y libbullet-dev libfreetype6-dev freeglut3-dev > /dev/null
#     - apt install -y liboce-foundation-dev liboce-modeling-dev liboce-ocaf-dev liboce-visualization-dev > /dev/null
#   script:
#     - export PYTHONPATH=$CI_PROJECT_DIR/install/site-packages
#     - export EXTRA_BUILDNAME="With Bullet and OCE"
#     - "sh ci/build_and_run_examples.sh $os"
#   only:
#   - master
#   dependencies:
#    - ubuntu:install_siconos_with_mechanisms
#   allow_failure: true
  
# This job clone, build and install siconos software  
# on archlinux os, with the 'mechanisms' config
# (release, all components, with oce and pythonocc)
# OCE and pythonocc are cloned from github repo, built and installed.
#
# Installed paths are transfered to next job (examples) using artifacts.
archlinux:install_siconos_with_mechanisms:
  stage: build-mechanisms
  image: base/archlinux
  before_script:
    - export CTEST_MODEL=$ctest_build_model
    - 'pacman -Sy && pacman --noconfirm -S - < ci/arch_linux_packages.txt'
  script:
    - "sh ci/install_oce.sh clone_oce"
    - export PYTHONPATH=$CI_PROJECT_DIR/install/site-packages
    - export OCE_INSTALL=`grep OCEConfig.cmake $CI_PROJECT_DIR/build/oce-last/install_manifest.txt| sed 's/OCEConfig.cmake//g'`
    - "sh ci/install_siconos_with_mechanisms.sh archlinux"
  only:
  - master
  artifacts:
    paths:
      - $CI_PROJECT_DIR/install/
      - install-siconos
  allow_failure: true
  
# This job clone, build and install siconos examples 
# (from siconos-tutorials), using Siconos installed in
# job 'archlinux:install_siconos_with_mechanisms' and thus
# includes all examples based on oce.
# OCE and pythonocc comes from artifacts of job archlinux:install_siconos_with_mechanisms
archlinux:build_and_run_examples_with_mechanisms:
  stage: test-mechanisms
  image: base/archlinux
  before_script:
    - export CTEST_MODEL=$ctest_build_model
    - 'pacman -Sy && pacman --noconfirm -S - < ci/arch_linux_packages.txt'
  script:
    - export PYTHONPATH=$CI_PROJECT_DIR/install/site-packages
    - export EXTRA_BUILDNAME="With Bullet and OCE"
    - "sh ci/build_and_run_examples.sh archlinux"
  only:
  - master
  dependencies:
   - archlinux:install_siconos_with_mechanisms
  allow_failure: true

